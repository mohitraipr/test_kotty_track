<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8"/>
  <title>SKU Management</title>
  <!-- Bootstrap 5 CSS (CDN) -->
  <link 
    rel="stylesheet" 
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" 
    crossorigin="anonymous"
  />
  <!-- Bootstrap Icons (optional) -->
  <link 
    rel="stylesheet" 
    href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"
  />
</head>
<body class="bg-light">
  <div class="container py-4">
    <h1 class="mb-4">SKU Management</h1>

    <!-- Single Card, Single Row: Left side = Search, Right side = Update -->
    <div class="card mb-4">
      <div class="card-body">
        <div class="row g-3 align-items-center">
          <!-- 1) SEARCH (left side) -->
          <div class="col-lg-6">
            <form class="row g-2" method="GET" action="/operator/sku-management">
              <div class="col-auto">
                <label for="skuSearch" class="col-form-label fw-bold">Search SKU:</label>
              </div>
              <div class="col-auto">
                <input
                  type="text"
                  class="form-control"
                  id="skuSearch"
                  name="sku"
                  placeholder="e.g. ABC123"
                  value="<%= sku %>"
                />
              </div>
              <div class="col-auto">
                <button type="submit" class="btn btn-primary">
                  <i class="bi bi-search"></i> Search
                </button>
              </div>
            </form>
          </div>

          <!-- 2) UPDATE (right side, AJAX) -->
          <div class="col-lg-6">
            <!-- We'll keep it as a separate form, but no 'method' or 'action' -->
            <form id="updateForm" class="row g-2">
              <!-- Hidden oldSku is the currently searched SKU (if any) -->
              <input type="hidden" id="oldSku" value="<%= sku %>" />

              <div class="col-auto">
                <label for="newSku" class="col-form-label fw-bold">New SKU:</label>
              </div>
              <div class="col-auto">
                <input
                  type="text"
                  class="form-control"
                  id="newSku"
                  placeholder="e.g. XYZ987"
                />
              </div>
              <div class="col-auto">
                <button type="submit" class="btn btn-success" id="updateButton">
                  <i class="bi bi-arrow-repeat"></i> Update
                </button>
              </div>
            </form>
          </div>
        </div>

        <!-- PROGRESS / SPINNER (for the Update) -->
        <div id="updateProgress" class="mt-3 d-none">
          <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Updating...</span>
          </div>
          <span class="ms-2">Updating SKUs... Please wait.</span>
        </div>

        <!-- ALERT for Update -->
        <div id="updateAlert" class="alert mt-3 d-none" role="alert"></div>
      </div>
    </div>

    <!-- If a SKU was searched, show the results below -->
    <% if (sku) { %>
      <h4 class="mb-3">Search Results for "<%= sku %>"</h4>

      <!-- If we have no results, show a warning -->
      <% if (results && results.length === 0) { %>
        <div class="alert alert-warning">
          No records found for this SKU.
        </div>
      <% } else { %>
        <!-- Otherwise, loop through each table with matching rows -->
        <% results.forEach(function(item) { %>
          <div class="card mb-4">
            <div class="card-header">
              <%= item.label %> 
              (found <%= item.rows.length %> row<%= item.rows.length === 1 ? '' : 's' %>)
            </div>
            <div class="card-body p-0">
              <table class="table table-striped mb-0">
                <thead>
                  <tr>
                    <th scope="col">Lot No</th>
                    <th scope="col">SKU</th>
                  </tr>
                </thead>
                <tbody>
                  <% item.rows.forEach(function(row) { %>
                    <tr>
                      <td><%= row.lot_no %></td>
                      <td><%= row.sku %></td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        <% }) %>
      <% } %>
    <% } %>
  </div>

  <!-- Bootstrap JS (for modals, alerts, etc.) -->
  <script 
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
    crossorigin="anonymous">
  </script>

  <script>
    const updateForm = document.getElementById('updateForm');
    const updateProgress = document.getElementById('updateProgress');
    const updateAlert = document.getElementById('updateAlert');
    const oldSkuField = document.getElementById('oldSku');
    const newSkuField = document.getElementById('newSku');

    if (updateForm) {
      updateForm.addEventListener('submit', async (event) => {
        event.preventDefault(); // Stop normal form submission

        // Show spinner
        updateProgress.classList.remove('d-none');
        updateAlert.classList.add('d-none'); // Hide old alert

        const oldSku = oldSkuField.value.trim();
        const newSku = newSkuField.value.trim();

        // Quick validation
        if (!oldSku || !newSku) {
          updateAlert.textContent = 'Both oldSku and newSku are required.';
          updateAlert.classList.remove('d-none', 'alert-success');
          updateAlert.classList.add('alert-danger');
          updateProgress.classList.add('d-none');
          return;
        }

        try {
          // Send AJAX to update route
          const response = await fetch('/operator/sku-management/update', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ oldSku, newSku })
          });

          if (!response.ok) {
            const text = await response.text();
            throw new Error(text || 'Update failed');
          }

          const data = await response.json();

          // Show success message
          updateAlert.textContent = data.message || 'SKU updated successfully!';
          updateAlert.classList.remove('d-none', 'alert-danger');
          updateAlert.classList.add('alert-success');

          // If you want to auto-fill the search box with the new SKU:
          document.getElementById('skuSearch').value = newSku;

          // If you want to refresh results automatically:
          // window.location = `/operator/sku-management?sku=${encodeURIComponent(newSku)}`;

        } catch (error) {
          console.error(error);
          updateAlert.textContent = error.message || 'Could not update SKU.';
          updateAlert.classList.remove('d-none', 'alert-success');
          updateAlert.classList.add('alert-danger');
        } finally {
          // Hide spinner
          updateProgress.classList.add('d-none');
        }
      });
    }
  </script>
</body>
</html>
